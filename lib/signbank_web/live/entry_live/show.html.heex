<%!-- TODO: this was from `gen.live`, look over it again --%>
<.header>
  Sign <%= @sign.id %>
  <:subtitle>This is a sign record from your database.</:subtitle>
  <:actions>
    <.link patch={~p"/dictionary/sign/#{@sign.id_gloss}/show/edit"} phx-click={JS.push_focus()}>
      <.button>Edit sign</.button>
    </.link>
  </:actions>
</.header>

<%!-- TODO: add video --%>
<%!-- TODO: add variants (somehow) --%>
<%!-- TODO: make video bigger --%>
<%!-- TODO: add translations (under video or something) --%>
<%!-- TODO:  --%>
<%!-- TODO: make svelte component that covers the whole sign page --%>
<%!-- TODO: also make a separate sign editor page --%>

<table>
  <%= for field <- [
    :id_gloss,
    :annotation_id_gloss,
    :translations,
    :published
] do %>
    <tr>
      <th>
        <%= Gettext.gettext(SignbankWeb.Gettext, Atom.to_string(field)) %>
      </th>
      <td>
        <%= with value <- Map.get(@sign, field) do %>
          <%= if is_list(value) do %>
            <%= Enum.join(value, ", ") %>
          <% else %>
            <%= value %>
          <% end %>
        <% end %>
      </td>
    </tr>
  <% end %>
</table>

<.definitions definitions={@sign.definitions} />

<%!-- TODO: display videos/etc --%>
<%= for variant <- @sign.variants do %>
  <div title="variant">
    <%= variant.id_gloss %>
  </div>
<% end %>

<%!-- TODO: just navigate back? --%>
<.back navigate={~p"/dictionary"}>Back to signs</.back>

<%!-- TODO: editing doesn't work and I don't want it to be a modal anyway --%>
<.modal
  :if={@live_action == :edit}
  id="sign-modal"
  show
  on_cancel={JS.patch(~p"/dictionary/sign/#{@sign.id_gloss}")}
>
  <.live_component
    module={SignbankWeb.SignLive.FormComponent}
    id={@sign.id}
    title={@page_title}
    action={@live_action}
    sign={@sign}
    patch={~p"/dictionary/sign/#{@sign}"}
  />
</.modal>
