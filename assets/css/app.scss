@charset "utf-8";

$base-font-size: 16px;

$purple: #413c58;
$yellow: #fff3c3;
$gray: lightgrey;

$footer-height: 4.5rem;

@use "bulma/utilities" with (
  $family-primary: "akkinson-hyperlegible, sans-serif",
  $primary: $purple
);

@use "bulma/components" with (
    $navbar-burger-color: $yellow,
    // $navbar-tab-active-background-color: $gray,
  );

@use "bulma/form" with (
  $input-shadow: none
);

/*! bulma.io v1.0.2 | MIT License | github.com/jgthms/bulma */
@use "bulma";

@use "region_map.scss";
@use "fonts.scss";
@use "modal.scss";

input[type="checkbox"],
input[type="radio"] {
  vertical-align: middle;
}

$gaps: (
  "small": 0.5em,
  "medium": 1em,
  "large": 2em,
);

@each $name, $gap in $gaps {
  .has-gap-#{$name} {
    gap: $gap;

    hr {
      margin-top: calc($gap / -2);
      margin-bottom: calc($gap / -2);
    }
  }
}

.navbar {
  align-items: center;

  .navbar-item,
  .navbar-link {
    color: $yellow;
  }
}

/* To right align the description and results buttons */
.search-matches .field {
  justify-content: flex-end;
}

.button .icon:last-child {
  padding-left: 0.5em;
}
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  font-size: $base-font-size;
  margin: 0;
  font-family: atkinson-hyperlegible;
}

html {
  box-sizing: border-box;

  --signbank-yellow: #fff3c3;
  --signbank-purple: #413c58;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

main {
  padding: 1rem;
}

#page-container {
  position: relative;
  min-height: 100vh;

  #content-wrap {
    padding-bottom: $footer-height;
  }
}

footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: $footer-height;
  padding: 1rem 2rem;
  background-color: #cacfd6; // TODO: move colors somewhere better
  text-align: right;

  .app_version {
    text-align: center;
    font-size: 0.8em;
    margin: 0;
  }
}

#logo {
  max-width: 35vw;
  margin-top: max(-2%, -22px);
  margin-bottom: 1%;

  img {
    max-width: inherit;
  }
}

.control .button {
  height: var(--bulma-control-height);
}

/* bulma has the panel-blocks as flexboxes, we don't necessarily want this */
.panel-block {
  display: block;
}

.panel-tabs {
  align-items: normal;
}

.search-filter {
  display: flex;
}

table tr [phx-click] {
  cursor: pointer;
}

table tr:has([phx-click]) {
  cursor: pointer;

  &:hover {
    background: #efefef;
  }
}

.zzznavbar {
  $text-color: var(--signbank-yellow);
  $background-color: var(--signbank-purple);
  background-color: $background-color;
  color: $text-color;

  nav {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: end;
    gap: 1rem;
    padding: 2rem;
    padding-top: 0;

    .menu_and_search {
      display: flex;
      gap: 1rem;
      flex-direction: column;
      align-items: end;

      .menu_and_search__submenu {
        position: absolute;
      }
    }

    #logo {
      max-width: 35vw;
      margin-bottom: max(-2%, -22px);

      img {
        max-width: inherit;
      }
    }

    ul {
      margin: 0;
      padding: 0;
      min-width: max-content;
      display: flex;
      gap: 1em;
      flex-direction: row;
      align-items: end;
      justify-content: space-between;

      font-size: 1.2rem;
      list-style: none;

      a {
        text-decoration: none;
        color: inherit;
      }
    }
  }
}

.login-controls {
  background: var(--signbank-purple);
  color: var(--signbank-yellow);
  display: flex;
  gap: 1em;
  justify-content: end;
  align-items: end;
  margin: 0;
  padding-right: 2em;
  padding-top: 1rem;
  list-style-type: none;

  a {
    color: inherit;
    text-decoration: none;
  }

  .login-controls__current-user {
    font-size: 0.9em;
    text-align: end;
  }
}

.homepage__quick-links {
  display: flex;

  li {
    border: 1px black solid;
    display: flex;
    flex-direction: column;
  }
}

.page-nav {
  display: flex;
  align-items: center;
  gap: 0.3em;
  list-style: none;

  a {
    color: black;
  }

  .page-nav__current {
    padding: 0.2em;
    border: 1px black solid;
    background-color: lightblue;
  }
}

.definitions .definition__senses {
  li:only-child {
    list-style: none;
  }
}
.zzdefinitions .definition {
  border: 1px darkgray solid;
  padding: 0.5em;
  border-radius: 3px;

  .definition__role {
    font-size: 1.2em;
  }

  .definition__senses li > div {
    display: flex;
    gap: 1em;

    p {
      margin: 0;
      padding: 0;
    }
  }

  .definition__senses li:not(:first-child) {
    padding-top: 1em;
  }

  .definition__senses li:only-child {
    list-style: none;
  }
}

.suggested_signs {
  display: flex;
  gap: 0.5em;
  list-style: none;
}

.entry-page__dict_page_nav {
  flex-shrink: 0;
  display: flex;
  gap: 1em;

  .entry-page__dict_position {
    text-align: center;
    align-content: center;
    line-height: 1em;
  }
}

.entry-page__search_result {
  padding: 0.5em 1em;
  border: solid 1px black;
  text-decoration: none;
  color: black;
  border-collapse: collapse;
}

.entry-page__search_result--current {
  background-color: lightgray;
}

.entry-page__switch_entry {
  margin-bottom: 1em;

  .level-left {
    flex-direction: row;
  }
}

.summary-table th {
  text-align: right;
  padding-right: 1em;
}

.entry-page__ling {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: auto;
  grid-template-areas:
    "video info"
    ". details"
    "tags defintitions";
}

.entry-page__variant_list {
  list-style: none;
  padding-left: 0;
  display: flex;
  gap: 1em;
}

.entry-page__columns {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  $gap: 2rem;
  gap: $gap;
  justify-content: space-between;

  .entry-page__column {
    height: 100%;
    width: calc(50% - $gap);
  }

  @media (max-width: 640px) {
    flex-direction: column;

    .entry-page__column {
      width: 100%;
    }
  }
}

.entry-page__videos_scroller {
  position: relative;

  .entry-page__videos_scroller_slide_buttons {
    position: absolute;
    z-index: 50;
    margin-top: 25%;
    padding: 1.3rem 0.5rem;

    display: flex;
    align-items: center;
    height: 2.5em;
    border-radius: 0;
    // border: 1px solid black;
    // color: black;
    // background-color: rgb(233, 233, 237);
    cursor: pointer;

    &:hover {
      // background-color: rgb(198, 198, 201);
    }
  }

  #next_variant {
    right: 0;
    border-top-left-radius: var(--bulma-control-radius);
    border-bottom-left-radius: var(--bulma-control-radius);
  }

  #previous_variant {
    left: 0;
    border-top-right-radius: var(--bulma-control-radius);
    border-bottom-right-radius: var(--bulma-control-radius);
  }
}

.video-frame {
  padding: 1rem;
  border-radius: 2px;

  &.citation {
    background-color: #3374ff; /* TODO: make navy or similar */
  }

  &.variant {
    background-color: #709dff; /* TODO: make sky blue */
  }

  &.english_entry {
    background-color: #f3a712;
  }

  &.se_only {
    background-color: #d23d32;
  }

  .video-frame__video_wrapper {
    position: relative;
    aspect-ratio: 16 / 9;
    display: flex;
  }

  .video-frame__video_wrapper video {
    height: 100%;
  }

  .video-frame__video_wrapper svg {
    height: 100%;
    width: 100%;
    transform: translateX(40%) translateY(-34%) scale(0.2);
    position: absolute;
  }

  .video-frame__sign-type {
    position: absolute;
    font-size: 1.1em;
    margin: 0.4rem;
    // margin-bottom: 0.5em;
    padding: 0.3em;
    background-color: transparentize($color: white, $amount: 0.05);
    border: 1px black solid;
    display: inline-block;
  }

  video {
    width: 100%;
  }
}

.ling-details-section {
  $padding: 1.5em;
  padding: $padding;
  border: 1px gray solid;
  border-bottom: none;

  summary {
    /* indicates summaries are clickable */
    cursor: pointer;
    background-color: lightgray;
    margin: calc($padding * -1);
    padding: $padding;

    /* Remove summary marker for Firefox */
    list-style-type: none;

    /* Remove summary marker for Chrome */
    &::-webkit-details-marker {
      display: none;
    }

    /* I don't know if any rendering engines currently understand this, but remove marker if they do*/
    &::marker {
      display: none;
    }

    h2 {
      margin: 0;
      font-size: larger;
    }
  }

  .ling-details-section__body {
    margin-top: $padding;
    /* TODO: on portrait screens we just want a single column */
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    min-height: 34em;
    height: 40vh;

    // HACK: Fix for headings not wrapping properly
    & > * {
      width: 50%;
    }

    @media (max-width: 640px) {
      flex-wrap: nowrap;
      height: unset;

      & > * {
        width: auto;
      }

      .entry-page__column {
        width: 100%;
      }
    }
  }

  /* round out the corners of the first and last sections, with no space between
      them it ends up looking like an accordion element */
  &:first-of-type {
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;

    margin-top: 1em;
  }

  &:last-of-type {
    border-bottom: 1px gray solid;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;

    margin-bottom: 1em;
  }

  .ling-details-section__properties {
    list-style: none;
    padding-left: 0.4em;
  }
}

.keyword-disambig {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  height: 18em;
  list-style-type: none;
  gap: 0em 2em;

  .keyword-disambig__keyword:not([data-published]):after {
    content: "*";
    font-size: 1.3em;
    text-decoration: none;
    /* slight kerning adjustment */
    margin-left: -0.2em;
  }
}

.flash {
  position: fixed;
  top: 0.5rem;
  right: 0.5rem;
  z-index: 50;
  padding: 0.75rem;
  margin-right: 0.5rem;
  border-radius: 0.5rem;
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width))
    var(--tw-ring-color);
  width: 20rem;

  background-color: white;

  @media (min-width: 640px) {
    width: 24rem;
  }

  flash__message {
    display: flex;
    gap: 0.375rem;
    align-items: center;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 600;
    line-height: 1.5rem;
  }

  .flash__info {
    --ring-color: #10b981;
    color: #065f46;
    background-color: #ecfdf5;
  }

  .flash__error {
    --ring-color: #ec4899;
    color: #831843;
    background-color: #fdf2f8;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
}

.transition__hide {
  &--start {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
  }

  &--mid {
    --transform-translate-y: 0;
    opacity: 1;

    @media (min-width: 640px) {
      --transform-scale-x: 1;
      --transform-scale-y: 1;
    }

    transform: translateX(var(--transform-scale-x))
      translateY(var(--transform-scale-y)) scaleX(var(--transform-scale-x))
      scaleY(var(--transform-scale-y));
  }

  &--end {
    --transform-translate-y: 1rem;
    opacity: 0;

    @media (min-width: 640px) {
      --transform-scale-x: 0.95;
      --transform-scale-y: 0.95;
      --transform-translate-y: 0;
    }

    transform: translateX(var(--transform-scale-x))
      translateY(var(--transform-scale-y)) scaleX(var(--transform-scale-x))
      scaleY(var(--transform-scale-y));
  }
}

.transition__show {
  &--start {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }

  &--mid {
    --transform-translate-y: 1rem;
    opacity: 0;

    @media (min-width: 640px) {
      --transform-scale-x: 0.95;
      --transform-scale-y: 0.95;
      --transform-translate-y: 0;
    }

    transform: translateX(var(--transform-scale-x))
      translateY(var(--transform-scale-y)) scaleX(var(--transform-scale-x))
      scaleY(var(--transform-scale-y));
  }

  &--end {
    --transform-translate-y: 0;
    opacity: 1;

    @media (min-width: 640px) {
      --transform-scale-x: 1;
      --transform-scale-y: 1;
    }
  }
}

.icon {
  &--mini {
    height: 12px;
    width: 12px;
  }

  &--small {
    height: 16px;
    width: 16px;
    flex-shrink: 0;
  }

  &--medium {
    height: 24px;
    width: 24px;
  }

  &--large {
    height: 32px;
    width: 32px;
  }
}

.animate-spin {
  animation: spin 1s linear infinite;

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }
}

.hamnosys {
  font-family: hamnosys;
  font-size: 1.8em;
  vertical-align: text-top;
}
